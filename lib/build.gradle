plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}
group = 'dev.bitbite'
version = '0.0.2'

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'dev.bitbite:OpenNetLib:2.0.2'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withJavadocJar()
    withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId = 'dev.bitbite'
            artifactId = 'OpenNetLib-Protocols'
			      version = '0.0.2'
            pom {
                name = 'OpenNetLib-Protocols'
                description = 'OpenNetLib-Protocols is a library that provides a set of protocols for OpenNetLib'
                url = 'https://github.com/bitbitedev/OpenNetLib-Protocols'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/bitbitedev/OpenNetLib-Protocols/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'bitbite'
                        name = 'Bitbite Team'
                        email = 'team@bitbite.dev'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bitbitedev/OpenNetLib-Protocols.git'
                    url = 'https://github.com/bitbitedev/OpenNetLib-Protocols'
                }
            }

        }
    }
    repositories {
    	maven {
            name = "OSSRH"
    		credentials {
    			username = System.getenv("MAVEN_USERNAME")
    			password = System.getenv("MAVEN_PASSWORD")
    		}
    		def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
    		def snapshotRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    		url = version.endsWith('SNAPSHOT') ? snapshotRepoUrl : releasesRepoUrl
    	}
    }
}

artifacts {
    archives javadocJar, sourcesJar
}
signing {
    sign publishing.publications.maven
}
javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
